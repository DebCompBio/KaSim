Parsing perturb.ka...
done
Parsing sos.ka...
done
Compiling...
Generating the raw contact map...
Generating the raw influence map...
Refining the influence map...
Reachability analysis...

------------------------------------------------------------
* There are some non applyable rules
------------------------------------------------------------
rule 4: Shc.Grb2 will never be applied.
rule 5: Shc/Grb2 will never be applied.
rule 13: R/int will never be applied.
rule 18: pY@Shc will never be applied.
rule 19: uY@Shc will never be applied.
------------------------------------------------------------
every agent may occur in the model

------------------------------------------------------------
* Relational properties:
------------------------------------------------------------
EGFR() =>
   [
	  EGFR(C,CR,L!EGF.r,N)
	v EGFR(C,CR!EGFR.CR,L!EGF.r,N!EGFR.C)
	v EGFR(C,CR!EGFR.CR,L!EGF.r,N)
	v EGFR(C!EGFR.N,CR!EGFR.CR,L!EGF.r,N)
	v EGFR(C,CR,L,N)
   ]
In agent EGFR: 
EGFR(Y1172~p?) => [ EGFR(Y1172~p) v EGFR(Y1172~p!Shc.PTB) ]
EGFR(Y1172~p?) => [ EGFR(C!EGFR.N,Y1172~p?) ]
EGFR(Y1172~u?) => [ EGFR(Y1172~u) ]
EGFR(Y1172~u?) => [ EGFR(C,Y1172~u?) v EGFR(C!EGFR.N,Y1172~u?) ]
In agent EGFR: 
EGFR(Y1092~p?) => [ EGFR(Y1092~p) v EGFR(Y1092~p!Grb2.SH2) ]
EGFR(Y1092~p?) => [ EGFR(C!EGFR.N,Y1092~p?) ]
EGFR(Y1092~u?) => [ EGFR(Y1092~u) ]
EGFR(Y1092~u?) => [ EGFR(C,Y1092~u?) v EGFR(C!EGFR.N,Y1092~u?) ]

------------------------------------------------------------
* Non relational properties:
------------------------------------------------------------
EGF() => [ EGF(r) v EGF(r!EGFR.L) ]
EGFR() => [ EGFR(Y1092~u?) v EGFR(Y1092~p?) ]
EGFR() => [ EGFR(Y1172~u?) v EGFR(Y1172~p?) ]
EGFR() => [ EGFR(Y1016~u) ]
EGFR() => [ EGFR(L) v EGFR(L!EGF.r) ]
EGFR() => [ EGFR(CR) v EGFR(CR!EGFR.CR) ]
EGFR() => [ EGFR(N) v EGFR(N!EGFR.C) ]
EGFR() => [ EGFR(C) v EGFR(C!EGFR.N) ]
EGFR() => [ EGFR(Y1172) v EGFR(Y1172!Shc.PTB) ]
EGFR() => [ EGFR(Y1092) v EGFR(Y1092!Grb2.SH2) ]
SoS() => [ SoS(PR) v SoS(PR!Grb2.SH3n) ]
SoS() => [ SoS(S~u) ]
Shc() => [ Shc(PTB~u?) ]
Shc() => [ Shc(Y) ]
Shc() => [ Shc(Y~u?) ]
Shc() => [ Shc(PTB) v Shc(PTB!EGFR.Y1172) ]
Grb2() => [ Grb2(SH2) v Grb2(SH2!EGFR.Y1092) ]
Grb2() => [ Grb2(SH3n) v Grb2(SH3n!SoS.PR) ]
Grb2() => [ Grb2(SH2~u?) ]
------------------------------------------------------------
* Properties in connected agents
------------------------------------------------------------
EGFR(CR!1),EGFR(CR!1) => 
	[
		  EGFR(CR!1,N!EGFR.C),EGFR(CR!1,N)
		v EGFR(CR!1,N),EGFR(CR!1,N)
		v EGFR(CR!1,N),EGFR(CR!1,N!EGFR.C)
	]
EGFR(CR!1),EGFR(CR!1) => 
	[
		  EGFR(C!EGFR.N,CR!1),EGFR(CR!1,N!EGFR.C)
		v EGFR(C,CR!1),EGFR(CR!1,N)
	]
EGFR(CR!1),EGFR(CR!1) => 
	[
		  EGFR(C!EGFR.N,CR!1),EGFR(C,CR!1)
		v EGFR(C,CR!1),EGFR(C,CR!1)
		v EGFR(C,CR!1),EGFR(C!EGFR.N,CR!1)
	]
------------------------------------------------------------
* Properties of pairs of bonds
------------------------------------------------------------
EGFR(CR!EGFR.CR,N!EGFR.C) => EGFR(CR!1,N!2),EGFR(C!2,CR!1)
EGFR(C!EGFR.N,CR!EGFR.CR) => EGFR(C!2,CR!1),EGFR(CR!1,N!2)
------------------------------------------------------------
* Export Parallel bonds to JSon (internal constraints_list):
------------------------------------------------------------
EGFR(C!EGFR.N,CR!EGFR.CR)=> [EGFR(C!2,CR!1),EGFR(CR!1,N!2)]
EGFR(CR!EGFR.CR,N!EGFR.C)=> [EGFR(CR!1,N!2),EGFR(C!2,CR!1)]

------------------------------------------------------------
* Export Connected agents to JSon (internal constraints_list):
------------------------------------------------------------
EGFR(CR!1),EGFR(CR!1)=> [
		  EGFR(C!EGFR.N,CR!1),EGFR(C,CR!1)
		v EGFR(C,CR!1),EGFR(C,CR!1)
		v EGFR(C,CR!1),EGFR(C!EGFR.N,CR!1)]
EGFR(CR!1),EGFR(CR!1)=> [
		  EGFR(C!EGFR.N,CR!1),EGFR(CR!1,N!EGFR.C)
		v EGFR(C,CR!1),EGFR(CR!1,N)]
EGFR(CR!1),EGFR(CR!1)=> [
		  EGFR(CR!1,N!EGFR.C),EGFR(CR!1,N)
		v EGFR(CR!1,N),EGFR(CR!1,N)
		v EGFR(CR!1,N),EGFR(CR!1,N!EGFR.C)]

execution finished without any exception
