function main=main()
%% command line: 
%%     'KaDE' 'auto.ka' '-d' 'output' '-l' '1' '-p' '0.01' '--rate-convention''Biochemist'
%% THINGS THAT ARE KNOWN FROM KAPPA FILE AND KaSim OPTIONS;
%% 
%% init - the initial abundances of each species and token
%% tinit - the initial simulation time (likely 0)
%% tend - the final simulation time 
%% initialstep - initial time step at the beginning of numerical integration
%% period_t_point - the time period between points to return
%%
%% variables (init(i),y(i)) denote numbers of embeddings 
%% rule rates are corrected by the number of automorphisms that induce an automorphism in the rhs as well


tinit=0.000000;
tend=1.000000;
initialstep=0.000001;
period_t_point=0.010000;

global nodevar
nodevar=7;
nvar=6;
nobs=2;
nrules=9;

global var
var=zeros(nvar,1);
global init
init=sparse(nodevar,1);

t = 0.000000;

init(7)=t;
init(1)=(1*6); %B()
init(2)=(1*4.500000); %A()
init(4)=(1*10); %E(r)
init(3)=(1*100); %R(e, r)
var(2)=(1*(init(3)+init(5)));
var(1)=((1*(2*init(6)))/2);

global k
global kd
global kun
global kdun

k(1)=3; %R(e!_,r), R(e!_,r) -> R(e!_,r!1), R(e!_,r!1)
k(2)=4; %R(e!_,r!1), R(e!_,r!1) -> R(e!_,r), R(e!_,r)
k(3)=5; %A(), A(), B(), B(), B() -> 
k(4)=7; %R(e!_,r), R(e!_,r), R(e!_,r), R(e!_,r), B(), B() -> R(e!_,r!1), R(e!_,r!1), R(e!_,r!2), R(e!_,r!2), B(), B(), B(x)
k(5)=8; %R(e!_,r!1), R(e!_,r!1), R(e!_,r!2), R(e!_,r!2), B(), B(), B() -> R(e!_,r), R(e!_,r), R(e!_,r), R(e!_,r), B(), B()
k(6)=1; %E(r), R(e) -> E(r!1), R(e!1), R(e!2,r), E(r!2)
k(7)=1; %E(r), E(r) -> E(r), E(r!1), R(e!1,r)
k(8)=1; %E(r), E(r), R(e,r) -> E(r!2), E(r!1), R(e!1,r), R(e!2,r)
k(9)=1; %E(r), E(r) -> E(r!2), E(r!1), R(e!1,r), R(e!2,r)

uiIsOctave = false;
uiIsMatlab = false;
LIC = license('inuse');
for elem = 1:numel(LIC)
    envStr = LIC(elem).feature
    if strcmpi(envStr,'octave')
       LICname=envStr;
       uiIsOctave = true;
       break
    end
    if strcmpi(envStr,'matlab')
       LICname=envStr
       uiIsMatlab = true;
       break
    end
end


options = odeset('RelTol', 1e-3, ...
                 'AbsTol', 1e-3, ...
                 'InitialStep', initialstep, ...
                 'MaxStep', tend);


if uiIsMatlab
   soln =  ode15s(@ode_aux,[tinit tend],ode_init(),options);
   soln.y=soln.y';
elseif uiIsOctave
   soln = ode2r(@ode_aux,[tinit tend],ode_init(),options);
end


nrows = length(soln.x);
tmp = zeros(nodevar,1);

n_points = floor ((tend-tinit)/period_t_point)+1;
t = linspace(tinit, tend, n_points);
obs = zeros(nrows,nobs);

for j=1:nrows
    for i=1:nodevar
        z(i)=soln.y(j,i);
    end
    h=ode_obs(z);
    for i=1:nobs
        obs(j,i)=h(i);
    end
end
if nobs==1
   y = interp1(soln.x, obs, t, 'pchip')';
else
   y = interp1(soln.x, obs, t, 'pchip');
end


filename = 'data.csv';
fid = fopen (filename,'w');
fprintf(fid,'# KaDE auto.ka -d output -l 1 -p 0.01 --rate-convention Biochemist\n')
fprintf(fid,'# t')
fprintf(fid,',|dimmers|')
fprintf(fid,',|monomers|')
fprintf(fid,'\n')
for j=1:n_points
    fprintf(fid,'%f',t(j));
    for i=1:nobs
        fprintf(fid,',%f',y(j,i));
    end
    fprintf(fid,'\n');
end
fclose(fid);


end



function dydt=ode_aux(t,y)

global nodevar
global var
global k
global kd
global kun
global kdun

var(2)=(1*(y(3)+y(5)));
var(1)=((1*(2*y(6)))/2);


dydt=zeros(nodevar,1);

%rule    : R(e!_,r!1), R(e!_,r!1), R(e!_,r!2), R(e!_,r!2), B(), B(), B() -> R(e!_,r), R(e!_,r), R(e!_,r), R(e!_,r), B(), B()
%reaction: B() + B() + B() + E(r!1), R(e!2, r!3), R(e!1, r!3), E(r!2) + E(r!1), R(e!2, r!3), R(e!1, r!3), E(r!2) -> B() + B() + E(r!1), R(e!1, r) + E(r!1), R(e!1, r) + E(r!1), R(e!1, r) + E(r!1), R(e!1, r)

dydt(6)=dydt(6)-2/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(6)=dydt(6)-2/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(1)=dydt(1)-1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(1)=dydt(1)-1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(1)=dydt(1)-1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(5)=dydt(5)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(5)=dydt(5)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(5)=dydt(5)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(5)=dydt(5)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(1)=dydt(1)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(1)=dydt(1)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);

%rule    : R(e!_,r!1), R(e!_,r!1), R(e!_,r!2), R(e!_,r!2), B(), B(), B() -> R(e!_,r), R(e!_,r), R(e!_,r), R(e!_,r), B(), B()
%reaction: B() + B() + B() + E(r!1), R(e!2, r!3), R(e!1, r!3), E(r!2) + E(r!1), R(e!2, r!3), R(e!1, r!3), E(r!2) -> B() + B() + E(r!1), R(e!1, r) + E(r!1), R(e!1, r) + E(r!1), R(e!1, r) + E(r!1), R(e!1, r)

dydt(6)=dydt(6)-2/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(6)=dydt(6)-2/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(1)=dydt(1)-1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(1)=dydt(1)-1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(1)=dydt(1)-1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(5)=dydt(5)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(5)=dydt(5)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(5)=dydt(5)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(5)=dydt(5)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(1)=dydt(1)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(1)=dydt(1)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);

%rule    : R(e!_,r!1), R(e!_,r!1), R(e!_,r!2), R(e!_,r!2), B(), B(), B() -> R(e!_,r), R(e!_,r), R(e!_,r), R(e!_,r), B(), B()
%reaction: B() + B() + B() + E(r!1), R(e!2, r!3), R(e!1, r!3), E(r!2) + E(r!1), R(e!2, r!3), R(e!1, r!3), E(r!2) -> B() + B() + E(r!1), R(e!1, r) + E(r!1), R(e!1, r) + E(r!1), R(e!1, r) + E(r!1), R(e!1, r)

dydt(6)=dydt(6)-2/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(6)=dydt(6)-2/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(1)=dydt(1)-1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(1)=dydt(1)-1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(1)=dydt(1)-1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(5)=dydt(5)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(5)=dydt(5)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(5)=dydt(5)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(5)=dydt(5)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(1)=dydt(1)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(1)=dydt(1)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);

%rule    : R(e!_,r!1), R(e!_,r!1), R(e!_,r!2), R(e!_,r!2), B(), B(), B() -> R(e!_,r), R(e!_,r), R(e!_,r), R(e!_,r), B(), B()
%reaction: B() + B() + B() + E(r!1), R(e!2, r!3), R(e!1, r!3), E(r!2) + E(r!1), R(e!2, r!3), R(e!1, r!3), E(r!2) -> B() + B() + E(r!1), R(e!1, r) + E(r!1), R(e!1, r) + E(r!1), R(e!1, r) + E(r!1), R(e!1, r)

dydt(6)=dydt(6)-2/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(6)=dydt(6)-2/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(1)=dydt(1)-1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(1)=dydt(1)-1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(1)=dydt(1)-1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(5)=dydt(5)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(5)=dydt(5)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(5)=dydt(5)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(5)=dydt(5)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(1)=dydt(1)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);
dydt(1)=dydt(1)+1/16*k(5)*y(6)/2*y(6)/2*y(1)*y(1)*y(1);

%rule    : R(e!_,r), R(e!_,r), R(e!_,r), R(e!_,r), B(), B() -> R(e!_,r!1), R(e!_,r!1), R(e!_,r!2), R(e!_,r!2), B(), B(), B(x)
%reaction: B() + B() + E(r!1), R(e!1, r) + E(r!1), R(e!1, r) + E(r!1), R(e!1, r) + E(r!1), R(e!1, r) -> B() + B() + B() + E(r!1), R(e!2, r!3), R(e!1, r!3), E(r!2) + E(r!1), R(e!2, r!3), R(e!1, r!3), E(r!2)

dydt(5)=dydt(5)-1/16*k(4)*y(5)*y(5)*y(5)*y(5)*y(1)*y(1);
dydt(5)=dydt(5)-1/16*k(4)*y(5)*y(5)*y(5)*y(5)*y(1)*y(1);
dydt(5)=dydt(5)-1/16*k(4)*y(5)*y(5)*y(5)*y(5)*y(1)*y(1);
dydt(5)=dydt(5)-1/16*k(4)*y(5)*y(5)*y(5)*y(5)*y(1)*y(1);
dydt(1)=dydt(1)-1/16*k(4)*y(5)*y(5)*y(5)*y(5)*y(1)*y(1);
dydt(1)=dydt(1)-1/16*k(4)*y(5)*y(5)*y(5)*y(5)*y(1)*y(1);
dydt(6)=dydt(6)+2/16*k(4)*y(5)*y(5)*y(5)*y(5)*y(1)*y(1);
dydt(6)=dydt(6)+2/16*k(4)*y(5)*y(5)*y(5)*y(5)*y(1)*y(1);
dydt(1)=dydt(1)+1/16*k(4)*y(5)*y(5)*y(5)*y(5)*y(1)*y(1);
dydt(1)=dydt(1)+1/16*k(4)*y(5)*y(5)*y(5)*y(5)*y(1)*y(1);
dydt(1)=dydt(1)+1/16*k(4)*y(5)*y(5)*y(5)*y(5)*y(1)*y(1);

%rule    : A(), A(), B(), B(), B() -> 
%reaction: B() + B() + B() + A() + A() -> 

dydt(2)=dydt(2)-1/12*k(3)*y(2)*y(2)*y(1)*y(1)*y(1);
dydt(2)=dydt(2)-1/12*k(3)*y(2)*y(2)*y(1)*y(1)*y(1);
dydt(1)=dydt(1)-1/12*k(3)*y(2)*y(2)*y(1)*y(1)*y(1);
dydt(1)=dydt(1)-1/12*k(3)*y(2)*y(2)*y(1)*y(1)*y(1);
dydt(1)=dydt(1)-1/12*k(3)*y(2)*y(2)*y(1)*y(1)*y(1);

%rule    : E(r), E(r), R(e,r) -> E(r!2), E(r!1), R(e!1,r), R(e!2,r)
%reaction: R(e, r) + E(r) + E(r) -> E(r!1), R(e!1, r) + E(r!1), R(e!1, r)

dydt(4)=dydt(4)-k(8)*y(4)*y(4)*y(3);
dydt(4)=dydt(4)-k(8)*y(4)*y(4)*y(3);
dydt(3)=dydt(3)-k(8)*y(4)*y(4)*y(3);
dydt(5)=dydt(5)+k(8)*y(4)*y(4)*y(3);
dydt(5)=dydt(5)+k(8)*y(4)*y(4)*y(3);

%rule    : E(r), R(e) -> E(r!1), R(e!1), R(e!2,r), E(r!2)
%reaction: R(e, r) + E(r) -> E(r!1), R(e!1, r) + E(r!1), R(e!1, r)

dydt(4)=dydt(4)-k(6)*y(4)*y(3);
dydt(3)=dydt(3)-k(6)*y(4)*y(3);
dydt(5)=dydt(5)+k(6)*y(4)*y(3);
dydt(5)=dydt(5)+k(6)*y(4)*y(3);

%rule    : R(e!_,r!1), R(e!_,r!1) -> R(e!_,r), R(e!_,r)
%reaction: E(r!1), R(e!2, r!3), R(e!1, r!3), E(r!2) -> E(r!1), R(e!1, r) + E(r!1), R(e!1, r)

dydt(6)=dydt(6)-2/2*k(2)*y(6)/2;
dydt(5)=dydt(5)+1/2*k(2)*y(6)/2;
dydt(5)=dydt(5)+1/2*k(2)*y(6)/2;

%rule    : R(e!_,r!1), R(e!_,r!1) -> R(e!_,r), R(e!_,r)
%reaction: E(r!1), R(e!2, r!3), R(e!1, r!3), E(r!2) -> E(r!1), R(e!1, r) + E(r!1), R(e!1, r)

dydt(6)=dydt(6)-2/2*k(2)*y(6)/2;
dydt(5)=dydt(5)+1/2*k(2)*y(6)/2;
dydt(5)=dydt(5)+1/2*k(2)*y(6)/2;

%rule    : R(e!_,r), R(e!_,r) -> R(e!_,r!1), R(e!_,r!1)
%reaction: E(r!1), R(e!1, r) + E(r!1), R(e!1, r) -> E(r!1), R(e!2, r!3), R(e!1, r!3), E(r!2)

dydt(5)=dydt(5)-1/2*k(1)*y(5)*y(5);
dydt(5)=dydt(5)-1/2*k(1)*y(5)*y(5);
dydt(6)=dydt(6)+2/2*k(1)*y(5)*y(5);

%rule    : E(r), E(r) -> E(r!2), E(r!1), R(e!1,r), R(e!2,r)
%reaction: E(r) + E(r) -> E(r!1), R(e!1, r) + E(r!1), R(e!1, r)

dydt(4)=dydt(4)-1/2*k(9)*y(4)*y(4);
dydt(4)=dydt(4)-1/2*k(9)*y(4)*y(4);
dydt(5)=dydt(5)+1/2*k(9)*y(4)*y(4);
dydt(5)=dydt(5)+1/2*k(9)*y(4)*y(4);

%rule    : E(r), E(r) -> E(r), E(r!1), R(e!1,r)
%reaction: E(r) + E(r) -> E(r!1), R(e!1, r) + E(r)

dydt(4)=dydt(4)-k(7)*y(4)*y(4);
dydt(4)=dydt(4)-k(7)*y(4)*y(4);
dydt(4)=dydt(4)+k(7)*y(4)*y(4);
dydt(5)=dydt(5)+k(7)*y(4)*y(4);
dydt(7)=1;

end


function Init=ode_init()

global nodevar
global init
Init=zeros(nodevar,1);

Init(1) = init(1); %B()
Init(2) = init(2); %A()
Init(3) = init(3); %R(e, r)
Init(4) = init(4); %E(r)
Init(5) = init(5); %E(r!1), R(e!1, r)
Init(6) = init(6); %E(r!1), R(e!2, r!3), R(e!1, r!3), E(r!2)
Init(7) = init(7); %t
end


function obs=ode_obs(y)

global nobs
global var
obs = zeros(nobs,1);

t = y(7);
var(2)=(1*(y(3)+y(5)));
var(1)=((1*(2*y(6)))/2);

obs(1)=var(1);
obs(2)=var(2);

end


main();
