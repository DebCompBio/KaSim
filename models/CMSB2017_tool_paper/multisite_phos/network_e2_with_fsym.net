# command line:  
#       KaDE   e2.ka    -print-efficiency    -ode-backend   DOTNET   -with-symmetries   Forward    -propagate-constants    -dotnet-output  network_e2_with_fsym.net  
# THINGS THAT ARE KNOWN FROM KAPPA FILE AND KaSim OPTIONS:
# 
# init - the initial abundances of each species and token
# tinit - the initial simulation time (likely 0)
# tend - the final simulation time 
# initialstep - initial time step at the beginning of numerical integration
# maxstep - maximal time step for numerical integration
# reltol - relative error tolerance;
# abstol - absolute error tolerance;
# period - the time period between points to return
#
# variables (init(i),y(i)) denote numbers of embeddings 
# rule rates are corrected by the number of automorphisms in the lhs of rules

begin species
 1 S(p1~U,p2~U) 100
 2 F(s) 100
 3 E(s) 100
 4 E(s!1).S(p1~U,p2~U!1) 0
 5 E(s!1).S(p1~U!1,p2~U!2).E(s!2) 0
 6 S(p1~P,p2~U) 0
 7 S(p1~P!1,p2~U).F(s!1) 0
 8 E(s!1).S(p1~P,p2~U!1) 0
 9 E(s!1).S(p1~P!2,p2~U!1).F(s!2) 0
 10 S(p1~P,p2~P) 0
 11 S(p1~P,p2~P!1).F(s!1) 0
 12 S(p1~P!1,p2~P!2).F(s!1).F(s!2) 0
end species




begin reactions
# rule    : E(s!1), S(p2~U!1) -> E(s), S(p2~P) 
# E(s!1), S(p1~U!1, p2~U!2), E(s!2) -> E(s!1), S(p1~P, p2~U!1) + E(s)  
1 5 3,8 1
# rule    : E(s!1), S(p2~U!1) -> E(s), S(p2~U) 
# E(s!1), S(p1~U!1, p2~U!2), E(s!2) -> E(s!1), S(p1~U, p2~U!1) + E(s)  
2 5 3,4 1
# rule    : E(s!1), S(p1~U!1) -> E(s), S(p1~P) 
# E(s!1), S(p1~U!1, p2~U!2), E(s!2) -> E(s!1), S(p1~P, p2~U!1) + E(s)  
3 5 3,8 1
# rule    : E(s!1), S(p1~U!1) -> E(s), S(p1~U) 
# E(s!1), S(p1~U!1, p2~U!2), E(s!2) -> E(s!1), S(p1~U, p2~U!1) + E(s)  
4 5 3,4 1
# rule    : E(s), S(p2~U) -> E(s!1), S(p2~U!1) 
# S(p1~P!1, p2~U), F(s!1) + E(s) -> E(s!1), S(p1~P!2, p2~U!1), F(s!2)  
5 3,7 9 1
# rule    : F(s!1), S(p1~P!1) -> F(s), S(p1~U) 
# S(p1~P!1, p2~U), F(s!1) -> S(p1~U, p2~U) + F(s)  
6 7 1,2 1
# rule    : F(s!1), S(p1~P!1) -> F(s), S(p1~P) 
# S(p1~P!1, p2~U), F(s!1) -> S(p1~P, p2~U) + F(s)  
7 7 2,6 1
# rule    : E(s!1), S(p2~U!1) -> E(s), S(p2~P) 
# E(s!1), S(p1~P!2, p2~U!1), F(s!2) -> S(p1~P, p2~P!1), F(s!1) + E(s)  
8 9 3,11 1
# rule    : E(s!1), S(p2~U!1) -> E(s), S(p2~U) 
# E(s!1), S(p1~P!2, p2~U!1), F(s!2) -> S(p1~P!1, p2~U), F(s!1) + E(s)  
9 9 3,7 1
# rule    : F(s!1), S(p1~P!1) -> F(s), S(p1~U) 
# E(s!1), S(p1~P!2, p2~U!1), F(s!2) -> E(s!1), S(p1~U, p2~U!1) + F(s)  
10 9 2,4 1
# rule    : F(s!1), S(p1~P!1) -> F(s), S(p1~P) 
# E(s!1), S(p1~P!2, p2~U!1), F(s!2) -> E(s!1), S(p1~P, p2~U!1) + F(s)  
11 9 2,8 1
# rule    : F(s!1), S(p2~P!1) -> F(s), S(p2~U) 
# S(p1~P!1, p2~P!2), F(s!1), F(s!2) -> S(p1~P!1, p2~U), F(s!1) + F(s)  
12 12 2,7 1
# rule    : F(s!1), S(p2~P!1) -> F(s), S(p2~P) 
# S(p1~P!1, p2~P!2), F(s!1), F(s!2) -> S(p1~P, p2~P!1), F(s!1) + F(s)  
13 12 2,11 1
# rule    : F(s!1), S(p1~P!1) -> F(s), S(p1~U) 
# S(p1~P!1, p2~P!2), F(s!1), F(s!2) -> S(p1~P!1, p2~U), F(s!1) + F(s)  
14 12 2,7 1
# rule    : F(s!1), S(p1~P!1) -> F(s), S(p1~P) 
# S(p1~P!1, p2~P!2), F(s!1), F(s!2) -> S(p1~P, p2~P!1), F(s!1) + F(s)  
15 12 2,11 1
# rule    : F(s!1), S(p2~P!1) -> F(s), S(p2~U) 
# S(p1~P, p2~P!1), F(s!1) -> S(p1~P, p2~U) + F(s)  
16 11 2,6 1
# rule    : F(s!1), S(p2~P!1) -> F(s), S(p2~P) 
# S(p1~P, p2~P!1), F(s!1) -> S(p1~P, p2~P) + F(s)  
17 11 2,10 1
# rule    : F(s), S(p1~P) -> F(s!1), S(p1~P!1) 
# S(p1~P, p2~P!1), F(s!1) + F(s) -> S(p1~P!1, p2~P!2), F(s!1), F(s!2)  
18 2,11 12 1
# rule    : F(s), S(p2~P) -> F(s!1), S(p2~P!1) 
# S(p1~P, p2~P) + F(s) -> S(p1~P, p2~P!1), F(s!1)  
19 2,10 11 1
# rule    : F(s), S(p1~P) -> F(s!1), S(p1~P!1) 
# S(p1~P, p2~P) + F(s) -> S(p1~P, p2~P!1), F(s!1)  
20 2,10 11 1
# rule    : E(s!1), S(p2~U!1) -> E(s), S(p2~P) 
# E(s!1), S(p1~P, p2~U!1) -> S(p1~P, p2~P) + E(s)  
21 8 3,10 1
# rule    : E(s!1), S(p2~U!1) -> E(s), S(p2~U) 
# E(s!1), S(p1~P, p2~U!1) -> S(p1~P, p2~U) + E(s)  
22 8 3,6 1
# rule    : F(s), S(p1~P) -> F(s!1), S(p1~P!1) 
# E(s!1), S(p1~P, p2~U!1) + F(s) -> E(s!1), S(p1~P!2, p2~U!1), F(s!2)  
23 2,8 9 1
# rule    : E(s), S(p2~U) -> E(s!1), S(p2~U!1) 
# S(p1~P, p2~U) + E(s) -> E(s!1), S(p1~P, p2~U!1)  
24 3,6 8 1
# rule    : F(s), S(p1~P) -> F(s!1), S(p1~P!1) 
# S(p1~P, p2~U) + F(s) -> S(p1~P!1, p2~U), F(s!1)  
25 2,6 7 1
# rule    : E(s!1), S(p2~U!1) -> E(s), S(p2~P) 
# E(s!1), S(p1~U, p2~U!1) -> S(p1~P, p2~U) + E(s)  
26 4 3,6 1
# rule    : E(s!1), S(p2~U!1) -> E(s), S(p2~U) 
# E(s!1), S(p1~U, p2~U!1) -> S(p1~U, p2~U) + E(s)  
27 4 1,3 1
# rule    : E(s), S(p1~U) -> E(s!1), S(p1~U!1) 
# E(s!1), S(p1~U, p2~U!1) + E(s) -> E(s!1), S(p1~U!1, p2~U!2), E(s!2)  
28 3,4 5 1
# rule    : E(s), S(p2~U) -> E(s!1), S(p2~U!1) 
# S(p1~U, p2~U) + E(s) -> E(s!1), S(p1~U, p2~U!1)  
29 1,3 4 1
# rule    : E(s), S(p1~U) -> E(s!1), S(p1~U!1) 
# S(p1~U, p2~U) + E(s) -> E(s!1), S(p1~U, p2~U!1)  
30 1,3 4 1
end reactions
