# command line:  
#       KaDE   fceri_fyn_trimer.ka    -print-efficiency    -ode-backend   DOTNET   -with-symmetries   Backward    -propagate-constants    -dotnet-output  network_fceri_fyn_trimer_with_bsym.net  
# THINGS THAT ARE KNOWN FROM KAPPA FILE AND KaSim OPTIONS:
# 
# init - the initial abundances of each species and token
# tinit - the initial simulation time (likely 0)
# tend - the final simulation time 
# initialstep - initial time step at the beginning of numerical integration
# maxstep - maximal time step for numerical integration
# reltol - relative error tolerance;
# abstol - absolute error tolerance;
# period - the time period between points to return
#
# variables (init(i),y(i)) denote numbers of embeddings 
# rule rates are corrected by the number of automorphisms in the lhs of rules

begin species
 1 Rec(a,b~Y,g~Y) 400.
 2 Lig(l1,l2,l3,a~1) 6000.
 3 Rec(a!1,b~Y,g~Y).Lig(l1,l2,l3!1,a~1) 0
 4 Rec(a!1,b~Y,g~Y).Lig(l1,l2!1,l3!2,a~1).Rec(a!2,b~Y,g~Y) 0
end species




begin reactions
# rule    : Rec(a!1), Lig(l1,l2!_,l3!1) -> Rec(a), Lig(l1,l2!_,l3) 
# Rec(a!1, b~Y, g~Y), Lig(l1, l2!1, l3!2, a~1), Rec(a!2, b~Y, g~Y) -> Rec(a!1, b~Y, g~Y), Lig(l1, l2, l3!1, a~1) + Rec(a, b~Y, g~Y)  
1 4 1,3 0
# rule    : Rec(a!1), Lig(l1,l2!1,l3!_) -> Rec(a), Lig(l1,l2,l3!_) 
# Rec(a!1, b~Y, g~Y), Lig(l1, l2!1, l3!2, a~1), Rec(a!2, b~Y, g~Y) -> Rec(a!1, b~Y, g~Y), Lig(l1, l2, l3!1, a~1) + Rec(a, b~Y, g~Y)  
2 4 1,3 0
# rule    : Rec(a), Lig(l1,l2,l3!_) -> Rec(a!1), Lig(l1,l2!1,l3!_) 
# Rec(a!1, b~Y, g~Y), Lig(l1, l2, l3!1, a~1) + Rec(a, b~Y, g~Y) -> Rec(a!1, b~Y, g~Y), Lig(l1, l2!1, l3!2, a~1), Rec(a!2, b~Y, g~Y)  
3 1,3 4 6.6422619e-08
# rule    : Rec(a), Lig(l1,l2,l3!_) -> Rec(a!1), Lig(l1!1,l2,l3!_) 
# Rec(a!1, b~Y, g~Y), Lig(l1, l2, l3!1, a~1) + Rec(a, b~Y, g~Y) -> Rec(a!1, b~Y, g~Y), Lig(l1, l2!1, l3!2, a~1), Rec(a!2, b~Y, g~Y)  
4 1,3 4 6.6422619e-08
# rule    : Rec(a!1), Lig(l1,l2,l3!1) -> Rec(a), Lig(l1,l2,l3) 
# Rec(a!1, b~Y, g~Y), Lig(l1, l2, l3!1, a~1) -> Rec(a, b~Y, g~Y) + Lig(l1, l2, l3, a~1)  
5 3 1,2 0
# rule    : Rec(a), Lig(l1,l2,l3) -> Rec(a!1), Lig(l1,l2,l3!1) 
# Rec(a, b~Y, g~Y) + Lig(l1, l2, l3, a~1) -> Rec(a!1, b~Y, g~Y), Lig(l1, l2, l3!1, a~1)  
6 1,2 3 4.4281746e-08
# rule    : Rec(a), Lig(l1,l2,l3) -> Rec(a!1), Lig(l1,l2!1,l3) 
# Rec(a, b~Y, g~Y) + Lig(l1, l2, l3, a~1) -> Rec(a!1, b~Y, g~Y), Lig(l1, l2, l3!1, a~1)  
7 1,2 3 4.4281746e-08
# rule    : Rec(a), Lig(l1,l2,l3) -> Rec(a!1), Lig(l1!1,l2,l3) 
# Rec(a, b~Y, g~Y) + Lig(l1, l2, l3, a~1) -> Rec(a!1, b~Y, g~Y), Lig(l1, l2, l3!1, a~1)  
8 1,2 3 4.4281746e-08
end reactions
