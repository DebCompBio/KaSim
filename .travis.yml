language: OCaml

dist: trusty
sudo: required

env:
  global:
    secure: bZcUIoyDu8tL8xyO6FL8JjfpRQe2QzzdKav7/V68NVjRxVNuc6FPc+VTchaVtKAfo7iVxjk0krUpyOeQujY3j8uL+ePs7dswGDHY/9trTyGws7NvcCzH+UrR5Yn2TM6I6ill5eHiBiW9W1/eX+K8UiSd/Usk9gZeBjJyz76tZh4=

matrix:
  include:
  - env: CHECKED=webserver
    addons:
      apt:
        sources:
          - avsm
        packages:
          - ocaml-nox
          - aspcud
          - opam
  - env: CHECKED=js
    addons:
      apt:
        sources:
          - avsm
        packages:
          - ocaml-nox
          - aspcud
          - opam
  - env: USE_TK=1
    addons:
      apt:
        sources:
          - avsm
        packages:
          - ocaml-nox
          - aspcud
          - opam
          - tk-dev
  - env: CHECKED=native
    addons:
      apt:
        sources:
          - avsm
        packages:
          - ocaml-nox
          - aspcud
          - opam
          - gnuplot-nox
          - graphviz
          - latex-xcolor
          - texlive-latex-recommended
          - texlive-fonts-recommended
          - tex4ht
  - os: osx

before_install:
  - sh -c "if [ '$TRAVIS_OS_NAME' = osx ] ; then brew update ; brew install opam ; fi"

install:
  - opam init -a git://github.com/ocaml/opam-repository && eval $(opam config env)
  - opam install -y conf-which base-bytes #Hack so that opam choose a version of cppo & yojson recent enough
  - opam install -y ocamlbuild yojson
  - sh -c "if [ '$CHECKED' = js ] ; then opam install -y lwt.2.7.1 reactiveData markup tyxml js_of_ocaml atdgen ; fi"
  - sh -c "if [ '$CHECKED' = webserver ] ; then opam install -y atdgen lwt cohttp ; fi"
  - sh -c "if [ '$USE_TK' = 1 ] ; then opam install -y labltk ; fi"

script:
  - make all
  - sh -c "if [ '$CHECKED' = native ] ; then make doc_html ; fi"
  - sh -c "if [ '$CHECKED' = native ] ; then make -j2 check ; fi"
  - sh -c "if [ '$CHECKED' = native ] ; then make META kappalib ; fi"
  - sh -c "if [ '$CHECKED' = webserver ] ; then make bin/WebSim bin/StdSim && cd python && python3 test_kappa_client.py && python2 python2_kappa_client.py -k ../models/abc.ka -t 100 ; fi"
  - sh -c "if [ '$CHECKED' = js ] ; then make bin/StdSim site/index.html ; fi"

after_success:
 sh -c "if [ '$TRAVIS_BRANCH' = master ] ; then dev/update-web.sh $CHECKED ; fi"
