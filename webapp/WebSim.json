{
    "swagger": "2.0",
    "info": {
        "title": "Kasim API",
        "description": "Kasim API",
        "contact": {
            "email": "admin@executableknowledge.org"
        },
        "license": {
            "name": "LGPL",
            "url": "http://www.gnu.org/licenses/lgpl-3.0.en.html"
        },
        "version": "1.0.0"
    },
    "host": "petstore.swagger.wordnik.com",
    "schemes": [ "http"  ],
    "basePath": "/v1",
    "produces": [ "application/json" ],
    "paths": {
        "/version": {
            "get": {
                "summary": "Version of api",
                "description": "Returns version information the api.  It also\nreturns information about the build.\n",
                "tags": [ "Version" ],
                "responses": {
                    "200": { "description": "Version information",
                             "schema": { "$ref": "#/definitions/Version" }
                           }
                }
            }
        },
        "/parse": {
            "get": {
                "summary": "Parse code",
                "description": "Parse code and return any errors that may\noccur.\n",
                "tags": [ "Parse" ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Kappa source code",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parsed code information",
                        "schema": {
                            "$ref": "#/definitions/Parse"
                        }
                    },
                    "400": {
                        "description": "errors",
                        "schema": {
                            "type": [
                                "string"
                            ]
                        }
                    }
                }
            }
        },
        "/process": {
            "post": {
                "summary": "start running a simulation",
                "description": "Given the code and parameters start running a simmulation.\n",
                "tags": [
                    "Process"
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "description": "Kappa model with parameters",
                        "schema": {
                            "$ref": "#/definitions/Parameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of tokens",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Token"
                            }
                        }
                    },
                    "400": {
                        "description": "Errors",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/process/{token}": {
            "get": {
                "summary": "Status of running simulation",
                "description": "Status of simulation.\n",
                "tags": [
                    "Process"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "type": "integer",
                        "description": "id of simulation process",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "state of the running process",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    "400": {
                        "description": "Errors",
                        "schema": {
                            "type": [
                                "string"
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Token": {
            "type": "string"
        },
        "Version": {
            "type": "object",
            "properties": {
                "build": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "Parse": {
            "type": "object",
            "properties": {
                "observables": {
                    "type": [
                        "string"
                    ]
                }
            }
        },
        "Parameter": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "nb_plot": {
                    "type": "integer"
                },
                "max_time": {
                    "type": "number"
                },
                "max_events": {
                    "type": "integer"
                }
            }
        },
        "Observable": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "number"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            }
        },
        "Plot": {
            "type": "object",
            "properties": {
                "legend": {
                    "type": [
                        "string"
                    ]
                },
                "observables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Observable"
                    }
                }
            }
        },
        "FluxData": {
            "type": "object",
            "properties": {
                "flux_name": {
                    "type": "string"
                },
                "flux_start": {
                    "type": [
                        "integer"
                    ]
                }
            }
        },
        "FluxMap": {
            "type": "object",
            "properties": {
                "flux_rules": {
                    "type": [
                        "string"
                    ]
                },
                "flux_data": {
                    "$ref": "#/definitions/FluxData"
                },
                "flux_end": {
                    "type": "number"
                }
            }
        },
        "Snapshot": {
            "type": "object"
        },
        "UnaryDistances": {
            "type": "object"
        },
        "Status": {
            "type": "object",
            "properties": {
                "plot": {
                    "$ref": "#Plot"
                },
                "time_percentage": {
                    "type": "number"
                },
                "event": {
                    "type": "integer"
                },
                "event_percentage": {
                    "type": "integer"
                },
                "tracked_events": {
                    "type": "integer"
                },
                "log_messages": {
                    "type": [
                        "string"
                    ]
                },
                "unary_distances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UnaryDistances"
                    }
                },
                "snapshots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Snapshot"
                    }
                },
                "flux_maps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FluxMap"
                    }
                },
                "files": {
                    "type": [
                        "string"
                    ]
                },
                "is_running": {
                    "type": "boolean"
                },
                "code": {
                    "type": "string"
                },
                "nb_plot": {
                    "type": "integer"
                },
                "max_time": {
                    "type": "number"
                },
                "max_events": {
                    "type": "integer"
                }
            }
        }
    }
}
